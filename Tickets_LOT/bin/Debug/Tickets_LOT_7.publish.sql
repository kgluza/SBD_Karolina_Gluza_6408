/*
Deployment script for Tickets_LOT

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Tickets_LOT"
:setvar DefaultFilePrefix "Tickets_LOT"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[BookTicket]...';


GO
ALTER PROCEDURE [dbo].BookTicket
	@PassengerFirstName nvarchar(50),
	@PassengerLastName nvarchar(50),
	@PassengerCountryOfResidence nvarchar(2),
	@BasePrice money,
    -- System pozwala na zabookowanie biletu z maksymalnie 4 segmentami (3 przesiadki)
    @FlightSegmentId1 int,
    @FlightSegmentId2 int = NULL,
    @FlightSegmentId3 int = NULL,
    @FlightSegmentId4 int = NULL
AS
DECLARE @TourOperatorId int = 1;
DECLARE @CountryId int;
DECLARE @DiscountPercentage int = 0;
DECLARE @TotalPrice money;

SET @CountryId = (SELECT TOP (1) ID FROM [DESKTOP-3TDOV04\SQLEXPRESS].Airports.dbo.Countries WHERE Countries.Iso LIKE @PassengerCountryOfResidence)
IF (@CountryId IS NULL)
	THROW 50001, 'Country code not found', 1;
-- Pobierz promocję dla danego kraju (tylko 1 dla kraju)

SET @DiscountPercentage = (SELECT SUM (DiscountPercentage) FROM Discounts);

IF @DiscountPercentage IS NULL 
    SET @DiscountPercentage = 0;
ELSE IF @DiscountPercentage > 100
    SET @DiscountPercentage = 100;

SET @TotalPrice = @BasePrice - (@BasePrice * @DiscountPercentage / 100);

-- Rollback całej transakcji w przypadku wystąpienia błędów
SET XACT_ABORT ON
BEGIN TRANSACTION

-- Najpierw pobierz kolejny numer ID ticketu

DECLARE @TicketId int;
SET @TicketId = (NEXT VALUE FOR [Airports].[dbo].[TicketId]);

-- Najpierw zabookuj ticket

INSERT INTO [dbo].[Tickets]
           ([OperatorId]
           ,[PassengerFirstName]
           ,[PassengerLastName]
           ,[PassengerCountryOfResidence]
           ,[BasePrice]
           ,[DiscountPercentage]
           ,[TotalPrice]
           ,[CreationDateTime])
     VALUES
           (@TourOperatorId
           ,@PassengerFirstName
           ,@PassengerLastName
           ,@CountryId
           ,@BasePrice
           ,@DiscountPercentage
           ,@TotalPrice,
           CURRENT_TIMESTAMP);

-- Pobierz ID ticketu i zabookuj segmenty
SET @TicketId = (SELECT SCOPE_IDENTITY());

INSERT INTO [DESKTOP-3TDOV04\SQLEXPRESS].Airports.dbo.BookedFlightSegments (TicketId, FlightSegmentId) VALUES (@TicketId, @FlightSegmentId1);

IF (@FlightSegmentId2 IS NOT NULL)
    INSERT INTO [DESKTOP-3TDOV04\SQLEXPRESS].Airports.dbo.BookedFlightSegments (TicketId, FlightSegmentId) VALUES (@TicketId, @FlightSegmentId2);
IF (@FlightSegmentId3 IS NOT NULL)
    INSERT INTO [DESKTOP-3TDOV04\SQLEXPRESS].Airports.dbo.BookedFlightSegments (TicketId, FlightSegmentId) VALUES (@TicketId, @FlightSegmentId3);
IF (@FlightSegmentId4 IS NOT NULL)
    INSERT INTO [DESKTOP-3TDOV04\SQLEXPRESS].Airports.dbo.BookedFlightSegments (TicketId, FlightSegmentId) VALUES (@TicketId, @FlightSegmentId4);


COMMIT TRANSACTION
RETURN 0
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO [dbo].[Discounts] (DiscountPercentage) VALUES (20);

EXECUTE dbo.BookTicket
	@PassengerFirstName = 'Karolina',
	@PassengerLastName = 'Gluza',
	@PassengerCountryOfResidence = 'PL',
	@BasePrice = 100,
    -- System pozwala na zabookowanie biletu z maksymalnie 4 segmentami (3 przesiadki)
    @FlightSegmentId1 = 1,
    @FlightSegmentId2 = 2,
    @FlightSegmentId3 = NULL,
    @FlightSegmentId4 = NULL; 
GO

GO
PRINT N'Update complete.';


GO
